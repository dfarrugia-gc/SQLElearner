@model IEnumerable<object>
@{
    List<Elearner.Models.Course> lstCourses = Model.ToList()[0] as List<Elearner.Models.Course>;
    List<Elearner.Models.CourseTopic> lstCourseTopics = Model.ToList()[1] as List<Elearner.Models.CourseTopic>;
    List<Elearner.Models.UserTopic> lstUserTopics = Model.ToList()[2] as List<Elearner.Models.UserTopic>;
}
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using Elearner.Models

@{
    ViewBag.Title = "Course Topics";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>
        @foreach (var c in lstCourses)
        {
            @Html.DisplayFor(modelItem => c.CourseName);
        }
    </h2>

    @if (User.Identity.IsAuthenticated)
    {
        <table class="table-hover col-lg-12">
            <tr>
                <th>
                    <h4>Topic</h4>
                </th>
                <th>
                    <h4>Progress</h4>
                </th>
                <th>

                </th>
            </tr>
            @foreach (var ct in lstCourseTopics)
            {

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => ct.Topic.TopicName)
                    </td>
                    <td>
                        0%
                    </td>
                    @if (lstUserTopics == null || lstUserTopics.Count() == 0)
                    {
                        if ((lstCourseTopics.Min(mct => mct.TopicOrder) == ct.TopicOrder))
                        {
                            <td>
                                <button class="btn btn-s btn-info" type="button" id="enrollCourse" onclick="location.href='@Url.Action("Create", "EnrollTopic", new { id = ct.CourseTopicId })'">
                                    LEARN
                                </button>
                            </td>
                        }
                        else
                        {
                            <td>
                                <button class="btn btn-s btn-info" type="button" id="enrollCourse" onclick="location.href='@Url.Action("Create", "EnrollTopic", new { id = ct.CourseTopicId })'" disabled>
                                    LEARN
                                </button>
                            </td>
                        }

                    }
                    else
                    {
                        if (lstUserTopics.Any(ut => ut.CourseTopicId.Equals(ct.CourseTopicId) && ut.Id == User.Identity.GetUserId()))
                        {
                            <td>
                                <button class="btn btn-s btn-info" type="button" id="enrollCourse" onclick="location.href='@Url.Action("Create", "EnrollTopic", new { id = ct.CourseTopicId })'">
                                    LEARN
                                </button>
                            </td>
                        }
                        else
                        {
                            <td>
                                <button class="btn btn-s btn-info" type="button" id="enrollCourse" onclick="location.href='@Url.Action("Create", "EnrollTopic", new { id = ct.CourseTopicId })'" disabled>
                                    LEARN
                                </button>
                            </td>

                        }
                    }

                </tr>
            }
        </table>
    }
    else
    {
        <div>
            <p>
                Please @Html.ActionLink("SIGN UP", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" }) Or
                @Html.ActionLink("LOG IN", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" }) to be able to resume the course!
            </p>
        </div>
    }
    
    @Html.ActionLink("Back to previous page", null, null, null, new { href = Request.UrlReferrer })

</div>