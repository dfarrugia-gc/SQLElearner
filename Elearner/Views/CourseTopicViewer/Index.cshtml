@model IEnumerable<object>
@{
    List<Elearner.Models.Course> lstCourses = Model.ToList()[0] as List<Elearner.Models.Course>;
    List<Elearner.Models.CourseTopic> lstCourseTopics = Model.ToList()[1] as List<Elearner.Models.CourseTopic>;
    List<Elearner.Models.UserTopic> lstUserTopics = Model.ToList()[2] as List<Elearner.Models.UserTopic>;
    List<Elearner.Models.UserTopicSection> lstUserTopicSections = Model.ToList()[3] as List<Elearner.Models.UserTopicSection>;
    List<Elearner.Models.CourseTopicSection> lstCourseTopicSections = Model.ToList()[4] as List<Elearner.Models.CourseTopicSection>;
}
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using Elearner.Models

@{
    ViewBag.Title = "Course Topics";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>
        @foreach (var c in lstCourses)
        {
            @Html.DisplayFor(modelItem => c.CourseName);
        }
    </h2>

    @if (User.Identity.IsAuthenticated)
    {
        <table class="table-hover col-lg-12">
            <tr>
                <th>
                    <h4>Topic</h4>
                </th>
                <th>
                    <h4>Progress</h4>
                </th>
                <th>

                </th>
            </tr>
            @foreach (var ct in lstCourseTopics)
            {

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => ct.Topic.TopicName)
                    </td>
                    <td>
                        @if (lstUserTopicSections.Where(uts => uts.CourseTopicSection.CourseTopicId == ct.CourseTopicId).Count() == 0)
                        {
                            <h6>0%</h6>
                        }
                        else
                        {
                            var percentage = (double)lstUserTopicSections.Where(uts => uts.CourseTopicSection.CourseTopicId == ct.CourseTopicId).Count() / (double)lstCourseTopicSections.Where(cts => cts.CourseTopicId == ct.CourseTopicId).Count() * 100;
                            <h6>
                                @Convert.ToInt32(percentage)%
                            </h6>
                        }                        
                    </td>
                    @if (lstUserTopics == null || lstUserTopics.Count() == 0)
                    {
                        if ((lstCourseTopics.Min(mct => mct.TopicOrder) == ct.TopicOrder))
                        {
                            <td style="padding:5px 5px 5px 5px">
                                <button class="btn btn-xs btn-info" type="button" id="enrollCourse" onclick="location.href='@Url.Action("Create", "EnrollTopic", new { id = ct.CourseTopicId })'">
                                    LEARN
                                </button>
                            </td>
                        }
                        else
                        {
                            <td style="padding:5px 5px 5px 5px">
                                <button class="btn btn-xs btn-info" type="button" id="enrollCourse" onclick="location.href='@Url.Action("Create", "EnrollTopic", new { id = ct.CourseTopicId })'" disabled>
                                    LEARN
                                </button>
                            </td>
                        }

                    }
                    else
                    {
                        if (lstUserTopics.Any(ut => ut.CourseTopicId.Equals(ct.CourseTopicId) && ut.Id == User.Identity.GetUserId()))
                        {
                            if (lstUserTopics.Any(ut => ut.CourseTopicId.Equals(ct.CourseTopicId) && ut.Id == User.Identity.GetUserId() && ut.Completed == true))
                            {
                                <td style="padding:5px 5px 5px 5px">
                                    <button type="button" class="btn btn-xs btn-success" id="enrollCourse" onclick="location.href='@Url.Action("Create", "EnrollTopic", new { id = ct.CourseTopicId })'">
                                        <span class="glyphicon glyphicon-check"></span> Completed
                                    </button>
                                </td>
                            }
                            else
                            {
                                <td style="padding:5px 5px 5px 5px">
                                    <button class="btn btn-xs btn-info" type="button" id="enrollCourse" onclick="location.href='@Url.Action("Create", "EnrollTopic", new { id = ct.CourseTopicId })'">
                                        LEARN
                                    </button>
                                </td>
                            }
                        }
                        else
                        {
                            <td style="padding:5px 5px 5px 5px">
                                <button class="btn btn-xs btn-info" type="button" id="enrollCourse" onclick="location.href='@Url.Action("Create", "EnrollTopic", new { id = ct.CourseTopicId })'" disabled>
                                    LEARN
                                </button>
                            </td>

                        }
                    }

                </tr>
            }
        </table>
    }
    else
    {
        <div>
            <p>
                Please @Html.ActionLink("SIGN UP", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" }) Or
                @Html.ActionLink("LOG IN", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" }) to be able to resume the course!
            </p>
        </div>
    }
</div>
<button class="btn btn-xs btn-link" type="button" id="enrollTopicSection" onclick="location.href='@Url.Action("Index", "Courses")'">
    Back to Courses
</button>