@model IEnumerable<object>
    @{ 
        List<SQLElearner.Models.Course> lstCourses = Model.ToList()[0] as List<SQLElearner.Models.Course>;
        List<SQLElearner.Models.UserCourseTopic> lstUserCourseTopic = Model.ToList()[1] as List<SQLElearner.Models.UserCourseTopic>;
    }
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using SQLElearner.Models

@{
    ViewBag.Title = "Courses";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Courses</h2>

@if (User.IsInRole("Admin"))
{
    var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
    var currentUser = manager.FindById(User.Identity.GetUserId());

        <p>
            @if (User.IsInRole("Admin"))
            {
                @Html.ActionLink("Create New", "Create")
            }      
        </p>
        <table class="table" style="font-size:large">
            @foreach (var item in lstCourses)
            {
                <tr>
                    <td valign="middle">
                        @Html.DisplayFor(modelItem => item.CourseName)
                    </td>
                    <td style="font-size:small">
                        @Html.ActionLink("Edit", "Edit", new { id = item.CourseId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.CourseId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.CourseId })

                    </td>
                </tr>
            }
        </table>
        @Html.ActionLink("Back to Manage Courses", "ManageCourses", "Courses")
}
else
{
    if (User.Identity.IsAuthenticated)
    {
        <table class="table" style="font-size:large">

            @foreach (var item in lstCourses)
            {
                <tr>
                    <td valign="middle">
                        @Html.DisplayFor(modelItem => item.CourseName)
                    </td>
                    <td valign="middle">
                        @if (User.IsInRole("Learner"))
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            foreach (var item2 in lstUserCourseTopic)
                            {
                                if (currentUser.Id == item2.Id)
                                {
                                    if (item2.CourseId == item.CourseId)
                                    {
                                        <button class="btn btn-info" type="button" id="enrollCourse" onclick="location.href='@Url.Action("Create","EnrollCourse",new { id = item.CourseId })'">
                                            CONTINUE COURSE
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-info" type="button" id="enrollCourse" onclick="location.href='@Url.Action("Create","EnrollCourse",new { id = item.CourseId })'">
                                            START COURSE
                                        </button>
                                    }
                                }
                            }
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <div>
            <p>
                Please @Html.ActionLink("SIGN UP", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" }) Or
                @Html.ActionLink("LOG IN", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" }) to be able to start the course!
            </p>
        </div>
    }
}